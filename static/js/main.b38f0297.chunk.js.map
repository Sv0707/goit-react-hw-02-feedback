{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","value","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","e","Notification","message","App","state","feedbackIncrement","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDom","render","StrictMode","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,4B,qBCA1BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,MAAQ,+BAA+B,KAAO,8BAA8B,KAAO,8BAA8B,MAAQ,iC,gBCA5LD,EAAOC,QAAU,CAAC,QAAU,gC,qKCcbC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,oBAAGC,UAAWC,IAAEC,MAAhB,kBAA6BP,KAC7B,oBAAGK,UAAWC,IAAEC,MAAhB,qBAAgCN,KAChC,oBAAGI,UAAWC,IAAEC,MAAhB,kBAA6BL,KAC7B,oBAAGG,UAAWC,IAAEC,MAAhB,oBAA+BJ,KAC/B,oBAAGE,UAAWC,IAAEC,MAAhB,gCAA2CH,S,gBCElCI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIL,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBC,M,gBCaQC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLX,UAAWC,IAAEW,OACbC,QAAS,SAACC,GAAD,OAAON,EAAgBE,IAJlC,SAMGA,GALIA,S,iBCDAK,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGhB,UAAWC,IAAEe,QAAhB,SAA0BA,KCI7BC,E,4MACFC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGF,EAAOE,EAAUF,GAAQ,O,EAIvCG,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB2B,gCAAkC,WAChC,IAAQ7B,EAAS,EAAKuB,MAAdvB,KACFG,EAAQ,EAAKyB,qBAEnB,OAD2BE,KAAKC,MAAO/B,EAAOG,EAAS,KAAO,K,4CAIhE,WACE,MAA+B6B,KAAKT,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ6B,KAAKJ,qBACbxB,EAAqB4B,KAAKH,kCAChC,OACI,gCACF,cAAC,EAAD,CAASpB,MAAM,4BAAf,SACE,cAAC,EAAD,CAAiBG,QAAS,CAAE,OAAQ,UAAW,OAASC,gBAAiBmB,KAAKR,sBAG9E,cAAC,EAAD,CAASf,MAAM,aAAf,SACCN,EAAQ,EAAI,cAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IAAyB,cAAC,EAAD,CAAciB,QAAQ,kC,GApC1IY,aA4CHX,IChDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.b38f0297.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"Statistics_value__3UYwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2GKUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"FeedbackOptions_statistics__zsDQg\",\"title\":\"FeedbackOptions_title__sXVP6\",\"list\":\"FeedbackOptions_list__1KxGn\",\"item\":\"FeedbackOptions_item__2m-aj\",\"label\":\"FeedbackOptions_label__3FRwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1Iri3\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p className={s.value}>Good:{good}</p>\r\n      <p className={s.value}>Neutral:{neutral}</p>\r\n      <p className={s.value}>Bad: {bad}</p>\r\n      <p className={s.value}>Total: {total}</p>\r\n      <p className={s.value}>Positive feedback: {positivePercentage}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map((option) => {\n      return (\n        <button\n          key={option}\n          type=\"button\"\n          className={s.button}\n          onClick={(e) => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      );\n    })}\n  </div>\n);\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.message}>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Section from \"../Section/Section\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Notification from \"../Notification/Notification\";\n\n\nclass App extends Component {\n    state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  \n    feedbackIncrement = (name) => {\n      this.setState((prevState) => {\n        return { [name]: prevState[name] + 1 };\n      });\n    };\n  \n    countTotalFeedback = () => {\n      const { good, neutral, bad } = this.state;\n      return good + neutral + bad;\n    };\n  \n    countPositiveFeedbackPercentage = () => {\n      const { good } = this.state;\n      const total = this.countTotalFeedback();\n      const positivePercentage = Math.round((good / total) * 100) + \"%\";\n      return positivePercentage;\n    };\n  \n    render() {\n      const { good, neutral, bad } = this.state;\n      const total = this.countTotalFeedback();\n      const positivePercentage = this.countPositiveFeedbackPercentage();\n      return (\n          <div>\n        <Section title=\"Please leave the feedback\">\n          <FeedbackOptions options={[ \"good\", \"neutral\", \"bad\" ]} onLeaveFeedback={this.feedbackIncrement} />\n          \n          </Section> \n          <Section title=\"Statistics\">\n          {total > 0 ? <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} /> : <Notification message=\"There is no feedback\" />}\n          </Section>\n          </div>\n        \n      );\n    }\n  }\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}